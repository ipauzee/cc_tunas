/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * History.java
 *
 * Created on Feb 16, 2010, 2:17:33 PM
 */

package cc_tunas;

import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.*;
import java.awt.*;
import java.awt.Event.*;
import java.sql.*;
import javax.sun.database.JavaConnector;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;

import java.io.File;
import java.io.FileInputStream;
import java.io.IOException;
import java.io.InputStream;
import java.util.Calendar;
import java.util.Iterator;
import java.util.List;
import java.util.ArrayList;


/**
 *
 * @author jsm
 */
public class History extends javax.swing.JFrame {

    public static String hs[]=new String[20];
    public static int no;
    public static int ticid;

    public static String opdt;
    public static String optm;
    public static String usrlvl;

    /** Creates new form History */
    public History() {
        initComponents();
        setSize(800,650);
        tblhis.setModel(tabhis);
        tbin(tblhis,new int []{100,100,120,100,420});
    }

    public static ContactCenterTunas CCanj;
    public History(ContactCenterTunas ccanj){
        this();
        this.CCanj=ccanj;
    }
    private ticket Tic;
    public History(ticket tic){
        this();
        this.Tic=tic;
    }

    private Add_note Add;
    public History(Add_note add){
        this();
        this.Add=add;
    }

    private void tbin(javax.swing.JTable tb, int lebar[]){
        tb.setAutoResizeMode(tb.AUTO_RESIZE_OFF);
        int kolom=tb.getColumnCount();
        for (int i=0;i<kolom;i++){
            javax.swing.table.TableColumn tbc=tb.getColumnModel().getColumn(i);
            tbc.setPreferredWidth(lebar[i]);
            tb.setRowHeight(18);
        }
    }
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        lblclo = new javax.swing.JLabel();
        lblprocess = new javax.swing.JLabel();
        lblopen = new javax.swing.JLabel();
        btnexit = new javax.swing.JButton();
        btnsave = new javax.swing.JButton();
        lblticno = new javax.swing.JLabel();
        lblopen1 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtinfo = new javax.swing.JTextArea();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblhis = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("HISTORY TICKET");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosed(java.awt.event.WindowEvent evt) {
                formWindowClosed(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        jPanel1.setLayout(null);

        lblclo.setFont(new java.awt.Font("Calibri", 0, 12));
        jPanel1.add(lblclo);
        lblclo.setBounds(20, 120, 330, 20);

        lblprocess.setFont(new java.awt.Font("Calibri", 0, 12));
        jPanel1.add(lblprocess);
        lblprocess.setBounds(20, 90, 330, 20);

        lblopen.setFont(new java.awt.Font("Calibri", 0, 12));
        jPanel1.add(lblopen);
        lblopen.setBounds(20, 60, 330, 20);

        btnexit.setFont(new java.awt.Font("Calibri", 0, 12));
        btnexit.setText("Exit");
        btnexit.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnexitMouseClicked(evt);
            }
        });
        jPanel1.add(btnexit);
        btnexit.setBounds(680, 530, 70, 25);

        btnsave.setFont(new java.awt.Font("Calibri", 0, 12));
        btnsave.setText("Add note");
        btnsave.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnsaveMouseClicked(evt);
            }
        });
        jPanel1.add(btnsave);
        btnsave.setBounds(40, 530, 130, 25);

        lblticno.setFont(new java.awt.Font("Calibri", 1, 12));
        jPanel1.add(lblticno);
        lblticno.setBounds(20, 10, 330, 20);

        lblopen1.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jPanel1.add(lblopen1);
        lblopen1.setBounds(440, 60, 330, 20);

        jScrollPane2.setBorder(null);

        txtinfo.setColumns(20);
        txtinfo.setEditable(false);
        txtinfo.setFont(new java.awt.Font("Calibri", 0, 12));
        txtinfo.setLineWrap(true);
        txtinfo.setRows(5);
        jScrollPane2.setViewportView(txtinfo);

        jPanel1.add(jScrollPane2);
        jScrollPane2.setBounds(20, 380, 750, 140);

        tblhis.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tblhis.setRowHeight(18);
        tblhis.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblhisMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblhis);

        jPanel1.add(jScrollPane1);
        jScrollPane1.setBounds(20, 160, 760, 210);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 803, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 580, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnexitMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnexitMouseClicked
        // TODO add your handling code here:
        dispose();
    }//GEN-LAST:event_btnexitMouseClicked

    private void btnsaveMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnsaveMouseClicked
        // TODO add your handling code here:
        opdt();
        optm();
        usrlvl();
        Add_note add=new Add_note();
        add.setVisible(true);


    }//GEN-LAST:event_btnsaveMouseClicked

    private void formWindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosed
        // TODO add your handling code here:
//        try {
//            conn.close();
//        } catch (SQLException ex) {
//            System.err.println(ex.getMessage());
//        }
    }//GEN-LAST:event_formWindowClosed

    private void tblhisMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblhisMouseClicked
        // TODO add your handling code here:
        int row=0;
        row=tblhis.getSelectedRow();
        if (tabhis.getValueAt(row, 4)==null){
            txtinfo.setText("");
        }else{
            txtinfo.setText(tabhis.getValueAt(row,4).toString());
        }
    }//GEN-LAST:event_tblhisMouseClicked

    public static javax.swing.table.DefaultTableModel getDefaultTabelhis(){
        return new javax.swing.table.DefaultTableModel(
                new Object [][]{},
                new String [] {"Date","Time","User","Status","Info"}){
                boolean[] canEdit=new boolean[]{
                    false,false,false,false,false
                };
                public boolean isCellEditable(int rowIndex, int columnIndex){
                        return canEdit[columnIndex];
                }
        };
    }
    /**
    * @param args the command line arguments
    */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new History().setVisible(true);
            }
        });
    }

    public static javax.swing.table.DefaultTableModel tabhis=getDefaultTabelhis();

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnexit;
    private javax.swing.JButton btnsave;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    public static javax.swing.JLabel lblclo;
    public static javax.swing.JLabel lblopen;
    public static javax.swing.JLabel lblopen1;
    public static javax.swing.JLabel lblprocess;
    public static javax.swing.JLabel lblticno;
    private javax.swing.JTable tblhis;
    private javax.swing.JTextArea txtinfo;
    // End of variables declaration//GEN-END:variables

    public static String sql;
    public static String sql1;
    public static ResultSet rs;
//    public static JavaConnector jconn=new JavaConnector();
//    public static Connection conn;

    
      public static void klik2(){
             if (no==0){

             }else{
                 tabhis.setRowCount(0);
                 try{int row=0;
              sql="select a.log_date" +
                      ", a.log_time" +
                      ", a.username" +
                      ", a.info" +
                      ", b.open_date" +
                      ", b.open_time" +
                      ", b.process_date" +
                      ", b.process_time" +
                      ", b.close_date" +
                      ", b.close_time" +
                      ", b.cancel_date" +
                      ", b.cancel_time" +
                      ", b.cancel_username" +
                      ", a.ticket_no" +
                      ", c.data as stt" +
                      " from log_tickets a, tickets b, _ticketstatus c, _userlevel d" +
                      " where b.ticket_id=a.ticket_id" +
                      " and a._status=c.code" +
                      " and a.user_level=d.code" +
                      " and a.ticket_id='"+no+"' order by a.log_date desc, a.log_time desc";
              rs=CCanj.jconn.SQLExecuteRS(sql, CCanj.conn);
//              System.out.println(sql);

            while(rs.next()){
                hs[0]=rs.getString(1);
                hs[1]=rs.getString(2);
//                ticid=Integer.parseInt(rs.getString(5));
                hs[2]=rs.getString(3);
                hs[3]=rs.getString("stt");
                hs[4]=rs.getString(4);
                tabhis.addRow(hs);
                if ((rs.getString(9)==null)||(rs.getString(10)==null)){
//                    System.out.print("\nmasuk k if closed date");
                    if((rs.getString(7)==null)||(rs.getString(8)==null)){
//                        System.out.print("\nmasuk k if process date");
                        if((rs.getString(5)==null)||(rs.getString(6)==null)){
                        }else{
                            lblopen.setText("Open Date      : "+rs.getString("open_date")+" "+"Time : "+rs.getString("open_time"));
                        }
                    }else{
                            lblopen.setText("Open Date      : "+rs.getString("open_date")+" "+"Time : "+rs.getString("open_time"));
                         lblprocess.setText("Process Date : "+rs.getString("process_date")+" "+"Time : "+rs.getString("process_time"));
                    }
                }else{
                    lblopen.setText("Open Date      : "+rs.getString("open_date")+" "+"Time : "+rs.getString("open_time"));
                 lblprocess.setText("Process Date : "+rs.getString("process_date")+" "+"Time : "+rs.getString("process_time"));
                     lblclo.setText("Closed Date  : "+rs.getString("close_date")+" "+"Time : "+rs.getString("close_time"));
                }
//                if((rs.getString(5)!=null)){
                   lblticno.setText("Ticket No    : "+rs.getString(14)+" ");
//                }
                if((rs.getString(11)!=null)||(rs.getString(12)!=null)){
                    lblopen1.setText("Cancel Date    : "+rs.getString("cancel_date")+" "+"Time : "+rs.getString("cancel_time"));
                }
            }
              
        }catch(Exception e){
            System.out.println("ini ya null pointer..??"+e);

        }
             }
         }
      public static void opdt(){
          try{
              sql="select CURRENT_DATE";
              rs = CCanj.jconn.SQLExecuteRS(sql, CCanj.conn);
              while(rs.next()){
                  opdt=rs.getString(1);
              }
          }catch(Exception exc){
              System.err.println(exc.getMessage());
          }
    }

        public static void optm(){
            try{
              sql="select CURRENT_TIME";
              rs = CCanj.jconn.SQLExecuteRS(sql, CCanj.conn);
              while(rs.next()){
                  optm=rs.getString(1);
              }
          }catch(Exception exc){
              System.err.println(exc.getMessage());
          }
        }

        public static void usrlvl(){
                try{
                    sql="select _level from user_account where username='"+CCanj.lbluser.getText()+"'";
                    rs=CCanj.jconn.SQLExecuteRS(sql, CCanj.conn);
                    while(rs.next()){
                        usrlvl=rs.getString(1);
                    }
                }catch(Exception e){
                    System.out.print(e);
                }
            }
}
