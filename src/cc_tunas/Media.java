/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * Media.java
 *
 * Created on Mar 24, 2010, 5:58:04 PM
 */

package cc_tunas;

import java.io.File;
import java.io.IOException;
import java.io.PrintWriter;
import javax.swing.*;
import java.sql.ResultSet;
import jxl.*;
import javax.sun.database.JavaConnector;
import jxl.write.Label;
import jxl.write.WritableSheet;
import jxl.write.WritableWorkbook;
import jxl.write.WriteException;

/**
 *
 * @author jsm
 */
public class Media extends javax.swing.JFrame {
    public static String hs[]=new String[20];
    public static int no,id;
    public static String tno, opdt, optm, usrlvl, med="", med1="", s;

    String nmfile, fullnmfile;
    JMenuItem open = new JMenuItem();
    public static PrintWriter out = null;
    public static StringBuffer toSend = new StringBuffer("");

    /** Creates new form Media */
    public Media() {
        initComponents();
        tblmedia.setModel(tabmed);
        pnlAttch.setVisible(false);
        tbin(tblmedia,new int []{100,100,100,100,120,500,300,0});
//        tabelmedia();
    }

    public static ContactCenterTunas CCanj;
    public Media(ContactCenterTunas ccanj){
        this();
        this.CCanj=ccanj;
    }
    private ticket Tic;
    public Media(ticket tic){
        this();
        this.Tic=tic;
    }

    private Add_note Add;
    public Media(Add_note add){
        this();
        this.Add=add;
    }

    private void tbin(javax.swing.JTable tb, int lebar[]){
        tb.setAutoResizeMode(tb.AUTO_RESIZE_OFF);
        int kolom=tb.getColumnCount();
        for (int i=0;i<kolom;i++){
            javax.swing.table.TableColumn tbc=tb.getColumnModel().getColumn(i);
            tbc.setPreferredWidth(lebar[i]);
            tb.setRowHeight(18);
        }
    }
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblmedia = new javax.swing.JTable();
        lblclo = new javax.swing.JLabel();
        lblprocess = new javax.swing.JLabel();
        lblopen = new javax.swing.JLabel();
        lblticno = new javax.swing.JLabel();
        lblopen1 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtinfo = new javax.swing.JTextArea();
        jLabel1 = new javax.swing.JLabel();
        btnExport = new javax.swing.JButton();
        pnlAttch = new javax.swing.JPanel();
        btnAttachment = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        scpCcList1 = new javax.swing.JScrollPane();
        jList2 = new javax.swing.JList();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("MULTIMEDIA");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosed(java.awt.event.WindowEvent evt) {
                formWindowClosed(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        jPanel1.setLayout(null);

        tblmedia.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        tblmedia.setFont(new java.awt.Font("Calibri", 0, 12));
        tblmedia.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Media", "Direction", "Date", "Time", "Username", "Comment"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblmedia.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        tblmedia.setRowHeight(18);
        tblmedia.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblmediaMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblmedia);

        jPanel1.add(jScrollPane1);
        jScrollPane1.setBounds(10, 10, 760, 220);
        jPanel1.add(lblclo);
        lblclo.setBounds(20, 120, 330, 20);
        jPanel1.add(lblprocess);
        lblprocess.setBounds(20, 90, 330, 20);
        jPanel1.add(lblopen);
        lblopen.setBounds(20, 60, 330, 20);
        jPanel1.add(lblticno);
        lblticno.setBounds(20, 10, 330, 20);

        lblopen1.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        jPanel1.add(lblopen1);
        lblopen1.setBounds(440, 60, 330, 20);

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setLayout(null);

        txtinfo.setColumns(20);
        txtinfo.setEditable(false);
        txtinfo.setFont(new java.awt.Font("Tahoma", 0, 11));
        txtinfo.setLineWrap(true);
        txtinfo.setRows(5);
        jScrollPane2.setViewportView(txtinfo);

        jPanel2.add(jScrollPane2);
        jScrollPane2.setBounds(0, 30, 760, 119);

        jLabel1.setFont(jLabel1.getFont().deriveFont((float)11));
        jLabel1.setText("Info :");
        jPanel2.add(jLabel1);
        jLabel1.setBounds(0, 20, 100, 10);

        btnExport.setFont(btnExport.getFont().deriveFont(btnExport.getFont().getStyle() | java.awt.Font.BOLD));
        btnExport.setText("Export");
        btnExport.setEnabled(false);
        btnExport.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExportActionPerformed(evt);
            }
        });
        jPanel2.add(btnExport);
        btnExport.setBounds(0, 0, 69, 24);

        pnlAttch.setBackground(new java.awt.Color(255, 255, 255));
        pnlAttch.setLayout(null);

        btnAttachment.setFont(btnAttachment.getFont().deriveFont(btnAttachment.getFont().getStyle() | java.awt.Font.BOLD));
        btnAttachment.setText("download");
        btnAttachment.setEnabled(false);
        btnAttachment.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAttachmentActionPerformed(evt);
            }
        });
        pnlAttch.add(btnAttachment);
        btnAttachment.setBounds(600, 0, 90, 24);

        jLabel2.setFont(jLabel2.getFont().deriveFont((float)11));
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Attachment :");
        pnlAttch.add(jLabel2);
        jLabel2.setBounds(80, 0, 80, 20);

        jList2.setFont(jList2.getFont().deriveFont((float)11));
        jList2.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jList2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jList2MouseReleased(evt);
            }
        });
        scpCcList1.setViewportView(jList2);

        pnlAttch.add(scpCcList1);
        scpCcList1.setBounds(150, 0, 450, 24);

        jPanel2.add(pnlAttch);
        pnlAttch.setBounds(70, 0, 690, 30);

        jPanel1.add(jPanel2);
        jPanel2.setBounds(10, 230, 760, 150);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 782, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 392, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void tblmediaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblmediaMouseClicked
        // TODO add your handling code here:
        int row=0;
        row=tblmedia.getSelectedRow();
        txtinfo.setText(tblmedia.getValueAt(row,5).toString());
        if(tblmedia.getValueAt(row,0).toString().equals("MAIL")||tblmedia.getValueAt(row,0).toString().equals("FAX")){
            id=Integer.parseInt(tblmedia.getValueAt(row,7).toString());
            pnlAttch.setVisible(true);btnAttachment.setEnabled(false);
            if(tblmedia.getValueAt(row,0).toString().equals("MAIL")){
                getAttch();
                med="EMAIL";
                if(tblmedia.getValueAt(row,1).toString().equals("INBOUND")){
                    med1="0";
                }else{
                    med1="1";
                }
            }else{
                DefaultListModel listModel = new DefaultListModel();
                jList2.setModel(listModel);
                listModel.addElement(tblmedia.getValueAt(row,6).toString());
                med="FAX";
            }
        }else{
            pnlAttch.setVisible(false);
        }
}//GEN-LAST:event_tblmediaMouseClicked

    private void formWindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosed
        // TODO add your handling code here:
//        try {
//            conn.close();
//        } catch (SQLException ex) {
//            System.err.println(ex.getMessage());
//        }
    }//GEN-LAST:event_formWindowClosed

    private void btnExportActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExportActionPerformed
        // TODO add your handling code here:
        tabex=tabmed;
        createexcel();
}//GEN-LAST:event_btnExportActionPerformed
String att;
Object sel1;
    private void btnAttachmentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAttachmentActionPerformed
        // TODO add your handling code here:
        JFileChooser chooser = new JFileChooser(new File(att));
        chooser.setSelectedFile(new File(att));
        if (chooser.showSaveDialog(this) == JFileChooser.APPROVE_OPTION) {
            nmfile=(chooser.getSelectedFile().getName().toString());
            System.out.print("\nnamafile: " + nmfile + "\n");
            fullnmfile=(chooser.getSelectedFile().getAbsolutePath());
            //            s = "DOWNLOAD|"+med+"|"+nmfile+"|"+fullnmfile+"|localhost|cc_takaful\r\n";
            if(med.equals("EMAIL")){
                s = "DOWNLOAD|"+med+"|"+med1+"|"+att+"|"+fullnmfile+"|192.168.0.48|anj_mail\r\n";
            }else{
                s = "DOWNLOAD|"+med+"|"+att+"|"+fullnmfile+"|192.168.0.48|anj_mail\r\n";
            }
            System.out.print("lempar string : "+s);
            sendString(s);
            CCanj.outupload.print(toSend);
            CCanj.outupload.flush();
            toSend.setLength(0);

            //            open(chooser.getSelectedFile());
            //            new File(chooser.getSelectedFile().getAbsolutePath());
        }
}//GEN-LAST:event_btnAttachmentActionPerformed

    private void jList2MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jList2MouseReleased
        // TODO add your handling code here:
        att="";
        int selectedIx = jList2.getSelectedIndex();
        //        for (int i=0; i<selectedIx.length; i++) {
        //            //            countagent++;
        //            sel = jList1.getModel().getElementAt(selectedIx[i]);
        //
        //            if(agent.equals("")){
        //                agent=agent+(String.valueOf(sel));
        //            }else{
        //                agent=agent+","+(String.valueOf(sel));
        //            }
        //        }
        //        if(agent.equals("")){
        //            agent=agent+"<None>";
        //        }
        sel1 = jList2.getModel().getElementAt(selectedIx);
        att=String.valueOf(sel1);
        System.out.print("\n att : "+att);
        btnAttachment.setEnabled(true);
}//GEN-LAST:event_jList2MouseReleased

    private void createexcel(){
        int koltab=0;
        int counter=1;
        int kolom=0;
        int baris=0;
        int k;
        int b;

        JFileChooser chooser = new JFileChooser("");
        if (chooser.showSaveDialog(this) == JFileChooser.APPROVE_OPTION) {
            try{

                //Membuat workbook baru dengan nama laporan.xls
                WritableWorkbook workBook = Workbook.createWorkbook(new File(chooser.getSelectedFile().getAbsolutePath()+".xls"));


                 //Membuat sheet dengan nama Sheet pertama
                 WritableSheet sheet = workBook.createSheet("First sheet ",0);
                 System.out.print("\n debug : pembuatan header");

            Label label;
            for(int q=0;q<tabex.getColumnCount();q++){
                label = new Label(q,0,(tabex.getColumnName(kolom).toString()));
                kolom++;
                sheet.addCell(label);
            }

            k=tabex.getColumnCount();
                k-=1;
            b=tabex.getRowCount();
    //            b+=1;

           while(counter<=b){
               if (koltab>=k){
                   koltab=0;
               }
               while(koltab<=k){
                   if(kolom>k){
                       kolom=0;
                   }
    //               System.out.print(tblreptic.getValueAt(baris, kolom));
                   if (tabex.getValueAt(baris, kolom)==null){
                       label = new Label(koltab,counter,"");
                   }else{
                       label = new Label(koltab,counter,(tabex.getValueAt(baris, kolom).toString()));
                   }
                   koltab++;
                   kolom++;

                   sheet.addCell(label);
               }
               counter++;
               baris++;
           }
            workBook.write();
            workBook.close();
            JOptionPane.showMessageDialog(null, "SUCCESSED EXPORTING TO EXCEL", "REPORTING",JOptionPane.INFORMATION_MESSAGE);


            } catch (WriteException ex) {
                System.out.print(ex);
            } catch (IOException ex) {
                System.out.print(ex);
            }
           catch (Exception ex){
               ex.printStackTrace();
           }
        }
    }

    private static void sendString(String s) {
        synchronized (toSend) {
            toSend.append(s + "\r\n");
        }
    }

    public static javax.swing.table.DefaultTableModel getDefaultTabelmed(){
        return new javax.swing.table.DefaultTableModel(
                new Object [][]{},
                new String [] {"Media","Direction","Date","Time","Username","Comment","Recording",""}){
                boolean[] canEdit=new boolean[]{
                    false,false,false,false,false,false,false,false
                };
                public boolean isCellEditable(int rowIndex, int columnIndex){
                        return canEdit[columnIndex];
                }
        };
    }
    /**
    * @param args the command line arguments
    */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Media().setVisible(true);
            }
        });
    }

    public static javax.swing.table.DefaultTableModel tabex;
    public static javax.swing.table.DefaultTableModel tabmed=getDefaultTabelmed();

    // Variables declaration - do not modify//GEN-BEGIN:variables
    public static javax.swing.JButton btnAttachment;
    public static javax.swing.JButton btnExport;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    public static javax.swing.JList jList2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    public static javax.swing.JLabel lblclo;
    public static javax.swing.JLabel lblopen;
    public static javax.swing.JLabel lblopen1;
    public static javax.swing.JLabel lblprocess;
    public static javax.swing.JLabel lblticno;
    private javax.swing.JPanel pnlAttch;
    private javax.swing.JScrollPane scpCcList1;
    private javax.swing.JTable tblmedia;
    private javax.swing.JTextArea txtinfo;
    // End of variables declaration//GEN-END:variables

    public static String sql;
    public static String sql1;
    public static ResultSet rs,rs1;
//    public static JavaConnector jconn=new JavaConnector();
//    public static Connection conn;

    public static void tabelmedia(){
        tabmed.setRowCount(0);
        try{
            int row=0;
            sql="select v.* " +
                    "from ( " +
                    "select 'PHONE' as media, " +
                    "case _direction " +
                    "when 0 then 'INBOUND' " +
                    "when 1 then 'OUTBOUND' " +
                    "end as 'direction', " +
                    "log_date, " +
                    "log_time, " +
                    "username, " +
                    "comment, " +
                    "filename, " +
                    "log_id " +
                    "from log_phone " +
                    "where (ticket_id='"+no+"' or ticket_no='"+tno+"')" +
                    "UNION " +
                    "select 'SMS' as media, " +
                    "case _direction " +
                    "when 0 then 'INBOUND' " +
                    "when 1 then 'OUTBOUND' " +
                    "end as 'direction', " +
                      "sms_date as log_date " +
                      ",sms_time as log_time " +
                      ",username " +
                      ",sms_text as comment " +
                      ",'' as filename " +
                      ",sms_id as log_id " +
                      "from log_sms " +
                      "where (ticket_id='"+no+"'  or ticket_no='"+tno+"')" +
                      "UNION " +
                      "select 'MAIL' as media " +
                      ",case direction " +
                      "when 0 then 'INBOUND' " +
                      "when 1 then 'OUTBOUND' " +
                      "end as 'direction' " +
                      ",mail_date as log_date " +
                      ",mail_time as log_time " +
                      ",username " +
                      ",mail_text as comment " +
                      ",'' as filename " +
                      ",mail_id as log_id " +
                      "from log_mail " +
                      "where (ticket_id='"+no+"'  or ticket_no='"+tno+"')" +
                      ") as v " +
                      "order by v.log_date,v.log_time";
            rs=CCanj.jconn.SQLExecuteRS(sql, CCanj.conn);
//              System.out.println(sql);

            while(rs.next()){
                hs[1]=rs.getString("direction");
                hs[2]=rs.getString("log_date");
                hs[3]=rs.getString("log_time");
                hs[4]=rs.getString("username");
                hs[5]=rs.getString("comment");
                hs[6]=rs.getString("filename");
                hs[7]=rs.getString("log_id");
                hs[0]=rs.getString("media");
                tabmed.addRow(hs);
            }
            if(tabmed.getRowCount()==0){
                btnExport.setEnabled(false);
            }else{
                btnExport.setEnabled(true);
            }
        }catch(Exception exc){
            System.err.println(exc.getMessage());
        }
    }

    private void getAttch(){
        DefaultListModel listModel = new DefaultListModel();
        jList2.setModel(listModel);
        try{
            jList2.setModel(listModel);
            sql1="select filename from mail_attachment where mail_id='"+id+"'";
            rs1=CCanj.jconn.SQLExecuteRS(sql1,CCanj.conn);
            while(rs1.next()){
                listModel.addElement(rs1.getString("filename").toString());
            }
        }catch(Exception e){
            System.out.println(e);
        }
    }
}
